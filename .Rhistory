parametros_heroin <- c(0.8513, 2.5178)
parametros_meth <- c(0.7579, 3.4166)
resultado_coke <- optim(parametros_coke, likelihood, datos = as.numeric(base$Coke))
resultado_heroin <- optim(parametros_heroin, likelihood, datos = as.numeric(base$Heroin))
resultado_meth <- optim(parametros_meth, likelihood, datos = as.numeric(base$Meth))
likelihood <- function(params, datos) {
verosimilitud_poisson_0(params[1], params[2], datos)
}
parametros_coke <- c(0.55042, 2.58441)
parametros_heroin <- c(0.8513, 2.5178)
parametros_meth <- c(0.7579, 3.4166)
resultado_coke <- optim(parametros_coke, likelihood, datos = as.numeric(base$Coke))
resultado_heroin <- optim(parametros_heroin, likelihood, datos = as.numeric(base$Heroin))
resultado_meth <- optim(parametros_meth, likelihood, datos = as.numeric(base$Meth))
verosimilitud_poisson_0 <- function(pi, landa, datos) {
ceros <- sum(datos == 0)
log_verosimilitud <- ceros * log(pi + (1 - pi) * exp(-landa))
for (i in 1:length(datos)) {
if (datos[i] != 0) {
log_verosimilitud <- log_verosimilitud + log((1 - pi) * exp(-landa) * landa^(datos[i]) / factorial(datos[i]))
}
}
return(-log_verosimilitud)
}
likelihood <- function(params, datos) {
verosimilitud_poisson_0(params[1], params[2], datos)
}
parametros_coke <- c(0.55042, 2.58441)
parametros_heroin <- c(0.8513, 2.5178)
parametros_meth <- c(0.7579, 3.4166)
resultado_coke <- optim(parametros_coke, likelihood, datos = as.numeric(base$Coke))
resultado_heroin <- optim(parametros_heroin, likelihood, datos = as.numeric(base$Heroin))
resultado_meth <- optim(parametros_meth, likelihood, datos = as.numeric(base$Meth))
cortes <- qnorm(
p = c(0, 1 / 4, 2 / 4, 3 / 4, 1),
mean = 0,
sd = 1
)
oscore <- cut(base$Oscore, breaks = cortes)
nscore <- cut(base$Nscore, breaks = cortes)
escore <- cut(base$Escore, breaks = cortes)
ascore <- cut(base$AScore, breaks = cortes)
cscore <- cut(base$Cscore, breaks = cortes)
table(oscore, base$Alcohol)
chisq.test(table(oscore, base$Alcohol))
cramerV(table(oscore, base$Alcohol))
table(oscore, base$Cannabis)
chisq.test(table(oscore, base$Cannabis))
cramerV(table(oscore, base$Cannabis))
table(oscore, base$Coke)
chisq.test(table(oscore, base$Coke))
cramerV(table(oscore, base$Coke))
table(oscore, base$Heroin)
chisq.test(table(oscore, base$Heroin))
cramerV(table(oscore, base$Heroin))
table(oscore, base$Meth)
chisq.test(table(oscore, base$Meth))
cramerV(table(oscore, base$Meth))
table(oscore, base$Nicotine)
chisq.test(table(oscore, base$Nicotine))
cramerV(table(oscore, base$Nicotine))
View(resultado_heroin)
library(vcd)
library(dplyr)
library(readxl)
library(tidyr)
library(ggplot2)
library(epiDisplay)
library(rcompanion)
base<-readxl::read_excel(paste(getwd(),"/consumo_drogas.xlsx",sep=""))
#Distribuciones de las drogas
results_df <- data.frame(Output = character(), stringsAsFactors = FALSE)
for(column in 14:ncol(base)){
nombre <- names(base)[column]
tab1(base[[nombre]],
cum.percent = FALSE,
missing = TRUE,
main = paste("Distribution of", nombre))
output <- capture.output(tab1(base[[nombre]],
cum.percent = FALSE,
missing = TRUE,
graph = FALSE))
output[1]<-nombre
temp_df <- data.frame(Output = output, stringsAsFactors = FALSE)
results_df <- rbind(results_df, temp_df)
}
#Eliminamos columnas que no vamos a usar.
columnas_eliminar=c("VSA", "Semer", "Mushrooms", "LSD", "Legalh", "Ketamine", "Ecstasy", "Crack", "Choc", "Caff", "Benzos", "Amyl", "Amphet", "SS", "Impulsive")
base<-base[, !names(base) %in% columnas_eliminar]
#Convertimos en factor
base$Age<-as.factor(base$Age)
base$Gender<-as.factor(base$Gender)
base$Country<-as.factor(base$Country)
base$Ethnicity<-as.factor(base$Ethnicity)
summary(base)
#Distribuciones de variables categóricas
#Age
ggplot(base) + geom_bar(mapping=aes(x=Age), fill="blue")
base %>% count(Age)
#Gender
base %>% count(Gender)
#Education
niveles = c("Left school before 16 years", "Left school at 16 years", "Left school at 17 years", "Left school at 18 years", "Some college or university, no certificate or degree","Professional certificate/ diploma", "University degree","Masters degree", "Doctorate degree")
ggplot(base) +
geom_bar(mapping = aes(x = factor(Education, levels=niveles)), fill="blue") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +labs(x="Education", y= "count" )
base %>% count(Education)
#Ethnicity
ggplot(base) + geom_bar(mapping=aes(x=Ethnicity), fill="blue") +theme(axis.text.x = element_text(angle = 45, hjust = 1))
base %>% count(Ethnicity)
#Country
ggplot(base) + geom_bar(mapping=aes(x=Country), fill="blue") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
base %>% count(Country)
for(i in 1:nrow(base)){
# Personas que no acabaron el colegio
if(base$Education[i] == "Left school before 16 years" |
base$Education[i] == "Left school at 16 years" |
base$Education[i] == "Left school at 17 years" |
base$Education[i] == "Left school at 18 years") {
base$Education[i] <- "Didn’t finish high-school"
}
# Personas que no acabaron la universidad, pero tienen el colegio
if(base$Education[i] == "Some college or university, no certificate or degree") {
base$Education[i] <- "High-school diploma"
}
# Personas con título universitario
if(base$Education[i] == "Professional certificate/ diploma" |
base$Education[i] == "University degree") {
base$Education[i] <- "College degree"
}
# Personas con postgrados
if(base$Education[i] == "Masters degree" |
base$Education[i] == "Doctorate degree") {
base$Education[i] <- "Postgraduate degree"
}
}
base$Education<-as.factor(base$Education)
#Distribuciones de variables continuas (scores)
ggplot(data=base) + geom_histogram(mapping=aes(x=Nscore), binwidth=0.2, fill="blue")+ geom_freqpoly(mapping=aes(x=Nscore), binwidth=0.2)
ggplot(data=base) + geom_histogram(mapping=aes(x=Escore), binwidth=0.2)
ggplot(data=base) + geom_histogram(mapping=aes(x=Oscore), binwidth=0.2)
ggplot(data=base) + geom_histogram(mapping=aes(x=AScore), binwidth=0.2)
ggplot(data=base) + geom_histogram(mapping=aes(x=Cscore), binwidth=0.2)
despivoteada <- pivot_longer(base,
cols = c(Nscore, Escore, Oscore, AScore, Cscore),
names_to = "Test",
values_to = "Resultado_test")
ggplot(despivoteada, aes(x=Resultado_test, y = after_stat(density))) + geom_freqpoly(aes(color=Test), binwidth=0.5)
ggplot(base, aes(x = Escore)) +
geom_density(fill = "blue") +
facet_wrap(~ Nicotine, scales = "free") +
labs(title = "Densidad de Extraversión (Escore) para consumidores de nicotina")
ggplot(base, aes(x = Nscore)) +
geom_density(fill = "blue") +
facet_wrap(~ Meth, scales = "free") +
labs(title = "Densidad de Neuroticismo (Nscore) para consumidores de meth")
ggplot(base, aes(x = Oscore)) +
geom_density(fill = "blue") +
facet_wrap(~ Coke, scales = "free") +
labs(title = "Densidad de apertura a la experiencia (Oscore) para consumidores de heroína")
ggplot(base, aes(x = AScore)) +
geom_density(fill = "blue") +
facet_wrap(~ Heroin, scales = "free") +
labs(title = "Densidad de amabilidad (Ascore) para consumidores de alcohol")
ggplot(base, aes(x = Cscore)) +
geom_density(fill = "blue") +
facet_wrap(~ Nicotine, scales = "free") +
labs(title = "Densidad de consciencia (Cscore) para consumidores de Nicotina")
consumo0_coca <- base[base$Coke == 0, ]
consumo1_coca <- base[base$Coke == 1, ]
consumo2_coca <- base[base$Coke == 2, ]
consumo3_coca <- base[base$Coke == 3, ]
consumo4_coca <- base[base$Coke == 4, ]
consumo5_coca <- base[base$Coke == 5, ]
consumo6_coca <- base[base$Coke == 6, ]
consumo0_heroina <- base[base$Heroin == 0, ]
consumo1_heroina <- base[base$Heroin == 1, ]
consumo2_heroina <- base[base$Heroin == 2, ]
consumo3_heroina <- base[base$Heroin == 3, ]
consumo4_heroina <- base[base$Heroin == 4, ]
consumo5_heroina <- base[base$Heroin == 5, ]
consumo6_heroina <- base[base$Heroin == 6, ]
consumo0_alcohol <- base[base$Alcohol == 0, ]
consumo1_alcohol <- base[base$Alcohol == 1, ]
consumo2_alcohol <- base[base$Alcohol == 2, ]
consumo3_alcohol <- base[base$Alcohol == 3, ]
consumo4_alcohol <- base[base$Alcohol == 4, ]
consumo5_alcohol <- base[base$Alcohol == 5, ]
consumo6_alcohol <- base[base$Alcohol == 6, ]
consumo0_nicotina <- base[base$Nicotine == 0, ]
consumo1_nicotina <- base[base$Nicotine == 1, ]
consumo2_nicotina <- base[base$Nicotine == 2, ]
consumo3_nicotina <- base[base$Nicotine == 3, ]
consumo4_nicotina <- base[base$Nicotine == 4, ]
consumo5_nicotina <- base[base$Nicotine == 5, ]
consumo6_nicotina <- base[base$Nicotine == 6, ]
print(mean(consumo0_nicotina$AScore))
print(mean(consumo1_nicotina$AScore))
print(mean(consumo2_nicotina$AScore))
print(mean(consumo3_nicotina$AScore))
print(mean(consumo4_nicotina$AScore))
print(mean(consumo5_nicotina$AScore))
print(mean(consumo6_nicotina$AScore))
prop.table(table(base$Age, base$Alcohol))
prop.table(table(base$Education, base$Alcohol))
prop.table(table(base$Country, base$Alcohol))
prop.table(table(base$Gender, base$Alcohol))
prop.table(table(base$Age, base$Cannabis))
prop.table(table(base$Education, base$Cannabis))
prop.table(table(base$Country, base$Cannabis))
prop.table(table(base$Gender, base$Cannabis))
prop.table(table(base$Age, base$Coke))
prop.table(table(base$Education, base$Coke))
prop.table(table(base$Country, base$Coke))
prop.table(table(base$Gender, base$Coke))
prop.table(table(base$Age, base$Heroin))
prop.table(table(base$Education, base$Heroin))
prop.table(table(base$Country, base$Heroin))
prop.table(table(base$Gender, base$Heroin))
prop.table(table(base$Age, base$Meth))
prop.table(table(base$Education, base$Meth))
prop.table(table(base$Country, base$Meth))
prop.table(table(base$Gender, base$Meth))
prop.table(table(base$Age, base$Nicotine))
prop.table(table(base$Education, base$Nicotine))
prop.table(table(base$Country, base$Nicotine))
prop.table(table(base$Gender, base$Nicotine))
verosimilitud_poisson_0 <- function(pi, landa, datos) {
ceros <- sum(datos == 0)
log_verosimilitud <- ceros * log(pi + (1 - pi) * exp(-landa))
for (i in 1:length(datos)) {
if (datos[i] != 0) {
log_verosimilitud <- log_verosimilitud + log((1 - pi) * exp(-landa) * landa^(datos[i]) / factorial(datos[i]))
}
}
return(-log_verosimilitud)
}
likelihood <- function(params, datos) {
verosimilitud_poisson_0(params[1], params[2], datos)
}
parametros_coke <- c(0.55042, 2.58441)
parametros_heroin <- c(0.8513, 2.5178)
parametros_meth <- c(0.7579, 3.4166)
resultado_coke <- optim(parametros_coke, likelihood, datos = as.numeric(base$Coke))
resultado_heroin <- optim(parametros_heroin, likelihood, datos = as.numeric(base$Heroin))
resultado_meth <- optim(parametros_meth, likelihood, datos = as.numeric(base$Meth))
cortes <- qnorm(
p = c(0, 1 / 4, 2 / 4, 3 / 4, 1),
mean = 0,
sd = 1
)
oscore <- cut(base$Oscore, breaks = cortes)
nscore <- cut(base$Nscore, breaks = cortes)
escore <- cut(base$Escore, breaks = cortes)
ascore <- cut(base$AScore, breaks = cortes)
cscore <- cut(base$Cscore, breaks = cortes)
table(oscore, base$Alcohol)
chisq.test(table(oscore, base$Alcohol))
cramerV(table(oscore, base$Alcohol))
table(oscore, base$Cannabis)
chisq.test(table(oscore, base$Cannabis))
cramerV(table(oscore, base$Cannabis))
table(oscore, base$Coke)
chisq.test(table(oscore, base$Coke))
cramerV(table(oscore, base$Coke))
table(oscore, base$Heroin)
chisq.test(table(oscore, base$Heroin))
cramerV(table(oscore, base$Heroin))
table(oscore, base$Meth)
chisq.test(table(oscore, base$Meth))
cramerV(table(oscore, base$Meth))
table(oscore, base$Nicotine)
chisq.test(table(oscore, base$Nicotine))
cramerV(table(oscore, base$Nicotine))
table(nscore, base$Alcohol)
chisq.test(table(nscore, base$Alcohol))
cramerV(table(nscore, base$Alcohol))
table(nscore, base$Cannabis)
chisq.test(table(nscore, base$Cannabis))
cramerV(table(nscore, base$Cannabis))
table(nscore, base$Coke)
chisq.test(table(nscore, base$Coke))
cramerV(table(nscore, base$Coke))
table(nscore, base$Heroin)
chisq.test(table(nscore, base$Heroin))
cramerV(table(nscore, base$Heroin))
table(nscore, base$Meth)
chisq.test(table(nscore, base$Meth))
cramerV(table(nscore, base$Meth))
table(nscore, base$Nicotine)
chisq.test(table(nscore, base$Nicotine))
cramerV(table(nscore, base$Nicotine))
table(escore, base$Alcohol)
chisq.test(table(escore, base$Alcohol))
cramerV(table(escore, base$Alcohol))
table(escore, base$Cannabis)
chisq.test(table(escore, base$Cannabis))
cramerV(table(escore, base$Cannabis))
table(escore, base$Coke)
chisq.test(table(escore, base$Coke))
cramerV(table(escore, base$Coke))
table(escore, base$Heroin)
chisq.test(table(escore, base$Heroin))
cramerV(table(escore, base$Heroin))
table(escore, base$Meth)
chisq.test(table(escore, base$Meth))
cramerV(table(escore, base$Meth))
table(escore, base$Nicotine)
chisq.test(table(escore, base$Nicotine))
cramerV(table(escore, base$Nicotine))
table(ascore, base$Alcohol)
chisq.test(table(ascore, base$Alcohol))
cramerV(table(ascore, base$Alcohol))
table(ascore, base$Cannabis)
chisq.test(table(ascore, base$Cannabis))
cramerV(table(ascore, base$Cannabis))
table(ascore, base$Coke)
chisq.test(table(ascore, base$Coke))
cramerV(table(ascore, base$Coke))
table(ascore, base$Heroin)
chisq.test(table(ascore, base$Heroin))
cramerV(table(ascore, base$Heroin))
table(ascore, base$Meth)
chisq.test(table(ascore, base$Meth))
cramerV(table(ascore, base$Meth))
table(ascore, base$Nicotine)
chisq.test(table(ascore, base$Nicotine))
cramerV(table(ascore, base$Nicotine))
table(cscore, base$Alcohol)
chisq.test(table(cscore, base$Alcohol))
cramerV(table(cscore, base$Alcohol))
table(cscore, base$Cannabis)
chisq.test(table(cscore, base$Cannabis))
cramerV(table(cscore, base$Cannabis))
table(cscore, base$Coke)
chisq.test(table(cscore, base$Coke))
cramerV(table(cscore, base$Coke))
table(cscore, base$Heroin)
chisq.test(table(cscore, base$Heroin))
cramerV(table(cscore, base$Heroin))
table(cscore, base$Meth)
chisq.test(table(cscore, base$Meth))
cramerV(table(cscore, base$Meth))
table(cscore, base$Nicotine)
chisq.test(table(cscore, base$Nicotine))
cramerV(table(cscore, base$Nicotine))
table(base$Education, base$Alcohol)
chisq.test(table(base$Education, base$Alcohol))
cramerV(table(base$Education, base$Alcohol))
table(base$Education, base$Cannabis)
chisq.test(table(base$Education, base$Cannabis))
cramerV(table(base$Education, base$Cannabis))
table(base$Education, base$Nicotine)
chisq.test(table(base$Education, base$Nicotine))
cramerV(table(base$Education, base$Nicotine))
table(base$Education, base$Coke)
chisq.test(table(base$Education, base$Coke))
cramerV(table(base$Education, base$Coke))
table(base$Education, base$Heroin)
chisq.test(table(base$Education, base$Heroin))
cramerV(table(base$Education, base$Heroin))
table(base$Education, base$Meth)
chisq.test(table(base$Education, base$Meth))
cramerV(table(base$Education, base$Heroin))
table(base$Gender, base$Alcohol)
chisq.test(table(base$Gender, base$Alcohol))
cramerV(table(base$Gender, base$Alcohol))
table(base$Gender, base$Cannabis)
chisq.test(table(base$Gender, base$Cannabis))
cramerV(table(base$Gender, base$Cannabis))
table(base$Gender, base$Nicotine)
chisq.test(table(base$Gender, base$Nicotine))
cramerV(table(base$Gender, base$Nicotine))
table(base$Gender, base$Coke)
chisq.test(table(base$Gender, base$Coke))
cramerV(table(base$Gender, base$Coke))
table(base$Gender, base$Heroin)
chisq.test(table(base$Gender, base$Heroin))
cramerV(table(base$Gender, base$Heroin))
table(base$Gender, base$Meth)
chisq.test(table(base$Gender, base$Meth))
cramerV(table(base$Gender, base$Meth))
table(base$Age, base$Alcohol)
chisq.test(table(base$Age, base$Alcohol))
cramerV(table(base$Age, base$Alcohol))
table(base$Age, base$Cannabis)
chisq.test(table(base$Age, base$Cannabis))
cramerV(table(base$Age, base$Cannabis))
table(base$Age, base$Nicotine)
chisq.test(table(base$Age, base$Nicotine))
cramerV(table(base$Age, base$Nicotine))
table(base$Age, base$Coke)
chisq.test(table(base$Age, base$Coke))
cramerV(table(base$Age, base$Coke))
table(base$Age, base$Heroin)
chisq.test(table(base$Age, base$Heroin))
cramerV(table(base$Age, base$Heroin))
table(base$Age, base$Meth)
chisq.test(table(base$Age, base$Meth))
cramerV(table(base$Age, base$Meth))
resumen_conteos <- summary(oscore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
chisq.test(resumen_conteos)
resumen_conteos <- summary(oscore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
mean(oscore)
mean(base$Oscore)
cortes <- qnorm(
p = c(0, 1 / 4, 2 / 4, 3 / 4, 1),
mean = -0.000225069,
sd = 1
)
oscore <- cut(base$Oscore, breaks = cortes)
resumen_conteos <- summary(oscore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
sd(base$Oscore)
cortes <- qnorm(
p = c(0, 1 / 4, 2 / 4, 3 / 4, 1),
mean = -0.000225069,
sd = 0.9964025
)
oscore <- cut(base$Oscore, breaks = cortes)
resumen_conteos <- summary(oscore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
chisq.test(resumen_conteos)
chisq.test(resumen_conteos)
cortes <- qnorm(
p = c(0, 1 / 4, 2 / 4, 3 / 4, 1),
mean = -0.000225069,
sd = 0.9964025
)
oscore <- cut(base$Oscore, breaks = cortes)
resumen_conteos <- summary(oscore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
chisq.test(resumen_conteos)
cortes <- qnorm(
p = c(0, 1 / 4, 2 / 4, 3 / 4, 1),
mean = -0.000225069,
sd = 0.9964025
)
ascore <- cut(base$AScore, breaks = cortes)
resumen_conteos <- summary(ascore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
chisq.test(resumen_conteos)
quantiles <- quantile(data, probs = c(0.25, 0.5, 0.75))
quantiles <- quantile(base$AScore, probs = c(0.25, 0.5, 0.75))
ascore <- cut(base$AScore, breaks = quantiles)
resumen_conteos <- summary(ascore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
quantiles <- quantile(base$AScore, probs = c(0, 0.25, 0.5, 0.75))
ascore <- cut(base$AScore, breaks = quantiles)
resumen_conteos <- summary(ascore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
quantiles <- quantile(base$AScore, probs = c(0, 0.25, 0.5, 0.75,1))
ascore <- cut(base$AScore, breaks = quantiles)
resumen_conteos <- summary(ascore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
quantiles <- quantile(base$AScore, probs = c(0.25, 0.5, 0.75,1))
ascore <- cut(base$AScore, breaks = quantiles)
resumen_conteos <- summary(ascore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
quantiles <- quantile(base$AScore, probs = c(0,0.25, 0.5, 0.75,1))
ascore <- cut(base$AScore, breaks = quantiles)
resumen_conteos <- summary(ascore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
quantiles <- quantile(base$AScore, probs = c(0,0.25, 0.5, 0.75,1))
ascore <- cut(base$AScore, breaks = quantiles)
resumen_conteos <- summary(ascore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4","g_5")
knitr::kable(resumen_conteos, align = "c")
quantiles <- quantile(base$AScore, probs = c(0,0.25, 0.5, 0.75))
ascore <- cut(base$AScore, breaks = quantiles)
resumen_conteos <- summary(ascore)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
cortes <- quantile(base$AScore, probs = seq(0, 1, by = 0.25))
# Mostrar los puntos de corte
print(cortes)
# Dividir los datos en cuartiles
grupos <- cut(base$AScore, breaks = cortes, include.lowest = TRUE, labels = c("Q1", "Q2", "Q3", "Q4"))
cortes <- quantile(base$AScore, probs = seq(0, 1, by = 0.25))
# Mostrar los puntos de corte
print(cortes)
# Dividir los datos en cuartiles
grupos <- cut(base$AScore, breaks = cortes, include.lowest = TRUE, labels = c("Q1", "Q2", "Q3", "Q4"))
resumen_conteos <- summary(grupos)
names(resumen_conteos) <- c("G_1", "G_2", "G_3", "G_4")
knitr::kable(resumen_conteos, align = "c")
plot(base$Age, base$Cannabis, main = "Gráfico de Dispersión", xlab = "Variable X", ylab = "Variable Y")
ggplot(data, aes(x = base$Age, y = base$Cannabis)) +
geom_point(color = "blue") +  # Añadir puntos con color azul
labs(title = "Scatter Plot usando ggplot2", x = "Variable X", y = "Variable Y") +
theme_minimal()  # Usar un tema minimalista para el gráfico
library(ggplot2)
ggplot(data, aes(x = base$Age, y = base$Cannabis)) +
geom_point(color = "blue") +  # Añadir puntos con color azul
labs(title = "Scatter Plot usando ggplot2", x = "Variable X", y = "Variable Y") +
theme_minimal()  # Usar un tema minimalista para el gráfico
ggplot(base, aes(x = base$Age, y = base$Cannabis)) +
geom_point(color = "blue") +  # Añadir puntos con color azul
labs(title = "Scatter Plot usando ggplot2", x = "Variable X", y = "Variable Y") +
theme_minimal()  # Usar un tema minimalista para el gráfico
